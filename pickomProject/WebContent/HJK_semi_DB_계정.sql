DROP TABLE "MEMBER";

CREATE TABLE "MEMBER" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"MEMBER_ID"	VARCHAR2(30)		NOT NULL,
	"MEMBER_PW"	VARCHAR2(200)		NOT NULL,
	"MEMBER_NM"	VARCHAR2(30)		NOT NULL,
	"MEMBER_PHONE"	CHAR(13)		NOT NULL,
	"MEMBER_EMAIL"	VARCHAR2(100)		NOT NULL,
	"MEMBER_ADDR"	VARCHAR2(500)		NOT NULL,
	"SIGNUP_DT"	DATE	DEFAULT SYSDATE	NOT NULL,
	"MEMBER_STATUS"	CHAR(1)	DEFAULT 'Y' CHECK("MEMBER_STATUS" IN('Y', 'N')) 	NOT NULL,
	"MEMBER_GRADE"	CHAR(1)	DEFAULT 'G' CHECK("MEMBER_STATUS" IN('A', 'G')) 	NOT NULL,
	"MEMBER_NICKNAME"	VARCHAR2(100)		NOT NULL
);

COMMENT ON COLUMN "MEMBER"."MEMBER_NO" IS '회원 구분 번호';

COMMENT ON COLUMN "MEMBER"."MEMBER_ID" IS '회원 아이디';

COMMENT ON COLUMN "MEMBER"."MEMBER_PW" IS '회원 비밀번호_(암호화)';

COMMENT ON COLUMN "MEMBER"."MEMBER_NM" IS '회원 이름';

COMMENT ON COLUMN "MEMBER"."MEMBER_PHONE" IS '회원 이름';

COMMENT ON COLUMN "MEMBER"."MEMBER_EMAIL" IS '회원 이메일';

COMMENT ON COLUMN "MEMBER"."MEMBER_ADDR" IS '회원 주소(거주지)';

COMMENT ON COLUMN "MEMBER"."SIGNUP_DT" IS '회원 가입일';

COMMENT ON COLUMN "MEMBER"."MEMBER_STATUS" IS '회원 가입 상태 (정상 : Y,  탈퇴 : N)';

COMMENT ON COLUMN "MEMBER"."MEMBER_GRADE" IS '회원 등급 (관리자 : A, 유저 : G)';

COMMENT ON COLUMN "MEMBER"."MEMBER_NICKNAME" IS '회원 닉네임';

DROP TABLE "PROFILE";

CREATE TABLE "PROFILE" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"PROFILE_PICTURE"	VARCHAR2(500)		NULL
);

COMMENT ON COLUMN "PROFILE"."MEMBER_NO" IS '회원 구분 번호';

COMMENT ON COLUMN "PROFILE"."PROFILE_PICTURE" IS '회원 프로필 사진';

DROP TABLE "REVIEW_BOARD";

CREATE TABLE "REVIEW_BOARD" (
	"REVIEW_BOARD_NO"	NUMBER		NOT NULL,
	"REVIEW_BOARD_TITLE"	VARCHAR2(100)		NOT NULL,
	"REVIEW_BOARD_CONTENT"	CLOB		NOT NULL,
	"REVIEW_BOARD_READ_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"REVIEW_BOARD_CREATE_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NOT NULL,
	"REVIEW_BOARD_MODIFY_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NOT NULL,
	"REVIEW_BOARD_CONDITION"	CHAR(1)	DEFAULT 'Y'	NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"MOVIE_NO"	NUMBER		NOT NULL,
	"REPORT_NO"	NUMBER		NULL,
	"REVIEW_CATECORY_CD"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "REVIEW_BOARD"."REVIEW_BOARD_NO" IS '리뷰 게시글 번호';

COMMENT ON COLUMN "REVIEW_BOARD"."REVIEW_BOARD_TITLE" IS '리뷰 게시글 제목';

COMMENT ON COLUMN "REVIEW_BOARD"."REVIEW_BOARD_CONTENT" IS '리뷰 게시글 내용';

COMMENT ON COLUMN "REVIEW_BOARD"."REVIEW_BOARD_READ_COUNT" IS '리뷰 게시글 조회수';

COMMENT ON COLUMN "REVIEW_BOARD"."REVIEW_BOARD_CREATE_DT" IS '리뷰 게시글 작성일';

COMMENT ON COLUMN "REVIEW_BOARD"."REVIEW_BOARD_MODIFY_DT" IS '리뷰 게시글 마지막 수정일';

COMMENT ON COLUMN "REVIEW_BOARD"."REVIEW_BOARD_CONDITION" IS '리뷰 게시글  (삭제: N, 정상: Y)';

COMMENT ON COLUMN "REVIEW_BOARD"."MEMBER_NO" IS '리뷰 게시판 회원번호';

COMMENT ON COLUMN "REVIEW_BOARD"."MOVIE_NO" IS '리뷰 게시판 영화 번호';

COMMENT ON COLUMN "REVIEW_BOARD"."REPORT_NO" IS '리뷰 게시판 신고번호';

COMMENT ON COLUMN "REVIEW_BOARD"."REVIEW_CATECORY_CD" IS '리뷰 카테고리 코드';

DROP TABLE "NORMAL_BOARD";

CREATE TABLE "NORMAL_BOARD" (
	"NORMAL_BOARD_NO"	NUMBER		NOT NULL,
	"NORMAL_BOARD_TITLE"	VARCHAR2(100)		NOT NULL,
	"NORMAL_BOARD_CONTENT"	CLOB		NOT NULL,
	"NORMAL_BOARD_READ_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"NORMAL_BOARD_CREATE_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NOT NULL,
	"NORMAL_BOARD_MODIFY_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NULL,
	"NORMAL_BOARD_CONDITION"	CHAR(1)	DEFAULT 'Y'	NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"REPORT_NO"	NUMBER		NULL,
	"NORMAL_CATEGORY_CD"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "NORMAL_BOARD"."NORMAL_BOARD_NO" IS '일반 게시글 번호';

COMMENT ON COLUMN "NORMAL_BOARD"."NORMAL_BOARD_TITLE" IS '일반 게시글 제목';

COMMENT ON COLUMN "NORMAL_BOARD"."NORMAL_BOARD_CONTENT" IS '일반 게시글 내용';

COMMENT ON COLUMN "NORMAL_BOARD"."NORMAL_BOARD_READ_COUNT" IS '일반 게시글 조회수';

COMMENT ON COLUMN "NORMAL_BOARD"."NORMAL_BOARD_CREATE_DT" IS '일반 게시글 작성일';

COMMENT ON COLUMN "NORMAL_BOARD"."NORMAL_BOARD_MODIFY_DT" IS '일반 게시글 마지막 수정일';

COMMENT ON COLUMN "NORMAL_BOARD"."NORMAL_BOARD_CONDITION" IS '일반 게시글 상태 (삭제:N, 정상:Y)';

COMMENT ON COLUMN "NORMAL_BOARD"."MEMBER_NO" IS '일반 게시글 회원 번호';

COMMENT ON COLUMN "NORMAL_BOARD"."REPORT_NO" IS '일반 게시글 신고 번호';

COMMENT ON COLUMN "NORMAL_BOARD"."NORMAL_CATEGORY_CD" IS '일반 카테고리 코드';

DROP TABLE "REVIEW_CATEGORY";

CREATE TABLE "REVIEW_CATEGORY" (
	"REVIEW_CATECORY_CD"	NUMBER		NOT NULL,
	"REVIEW_CATEGORY_NM"	VARCHAR2(50)		NOT NULL
);

COMMENT ON COLUMN "REVIEW_CATEGORY"."REVIEW_CATECORY_CD" IS '리뷰 카테고리 코드';

COMMENT ON COLUMN "REVIEW_CATEGORY"."REVIEW_CATEGORY_NM" IS '리뷰 카테고리 명';

DROP TABLE "NORMAL_CATEGORY";

CREATE TABLE "NORMAL_CATEGORY" (
	"NORMAL_CATEGORY_CD"	NUMBER		NOT NULL,
	"NORMAL_CATEGORY_NM"	VARCHAR2(50)		NOT NULL
);

COMMENT ON COLUMN "NORMAL_CATEGORY"."NORMAL_CATEGORY_CD" IS '일반 카테고리 코드';

COMMENT ON COLUMN "NORMAL_CATEGORY"."NORMAL_CATEGORY_NM" IS '일반 카테고리 명';

DROP TABLE "REVIEW_FILE";

CREATE TABLE "REVIEW_FILE" (
	"REVIEW_FILE_NO"	NUMBER		NOT NULL,
	"REVIEW_FILE_PATH"	VARCHAR2(500)		NOT NULL,
	"REVIEW_FILE_NM"	VARCHAR2(100)		NOT NULL,
	"REVIEW_FILE_LV"	NUMBER		NOT NULL,
	"REVIEW_FILE_BOARD_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "REVIEW_FILE"."REVIEW_FILE_NO" IS '리뷰 파일번호';

COMMENT ON COLUMN "REVIEW_FILE"."REVIEW_FILE_PATH" IS '리뷰 파일경로';

COMMENT ON COLUMN "REVIEW_FILE"."REVIEW_FILE_NM" IS '리뷰 파일명';

COMMENT ON COLUMN "REVIEW_FILE"."REVIEW_FILE_LV" IS '리뷰 파일등록 순서';

COMMENT ON COLUMN "REVIEW_FILE"."REVIEW_FILE_BOARD_NO" IS '리뷰 게시글 번호';

DROP TABLE "REVIEW_COMMENT";

CREATE TABLE "REVIEW_COMMENT" (
	"REVIEW_COMENT_NO"	NUMBER		NOT NULL,
	"REVIEW_COMMENT_CONTENT"	CLOB		NOT NULL,
	"REVIEW_COMMENT_WRITER"	VARCHER2(30)		NOT NULL,
	"REVIEW_COMENT _DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NOT NULL,
	"REVIEW_COMENT_MODIFY_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NULL,
	"REVIEW_COMENT_STATUS"	CHAR(1)	DEFAULT 'Y'	NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"REPORT_NO"	NUMBER		NULL,
	"REVIEW_BOARD_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "REVIEW_COMMENT"."REVIEW_COMENT_NO" IS '리뷰 댓글 번호';

COMMENT ON COLUMN "REVIEW_COMMENT"."REVIEW_COMMENT_CONTENT" IS '리뷰 댓글 내용';

COMMENT ON COLUMN "REVIEW_COMMENT"."REVIEW_COMMENT_WRITER" IS '리뷰 댓글 작성자';

COMMENT ON COLUMN "REVIEW_COMMENT"."REVIEW_COMENT _DT" IS '리뷰 댓글 적성일';

COMMENT ON COLUMN "REVIEW_COMMENT"."REVIEW_COMENT_MODIFY_DT" IS '리뷰 댓글 마지막 수정일';

COMMENT ON COLUMN "REVIEW_COMMENT"."REVIEW_COMENT_STATUS" IS '리뷰 댓글상태  (삭제: N, 정상: Y)';

COMMENT ON COLUMN "REVIEW_COMMENT"."MEMBER_NO" IS '리뷰 회원 구분 번호';

COMMENT ON COLUMN "REVIEW_COMMENT"."REPORT_NO" IS '신고번호';

COMMENT ON COLUMN "REVIEW_COMMENT"."REVIEW_BOARD_NO" IS '리뷰 게시글 번호';

DROP TABLE "NOTICE";

CREATE TABLE "NOTICE" (
	"NOTICE_NO"	NUMBER		NOT NULL,
	"NOTICE_TITLE"	VARCHAR2(100)		NOT NULL,
	"NOTICE_CONTENT"	CLOB		NOT NULL,
	"NOTICE_READ_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"NOTICE_CREATE_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NOT NULL,
	"NOTICE_BOD_MODIFY_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NULL,
	"NOTICE_STATUS"	CHAR(1)		NOT NULL,
	"NOTICE_CATEGORY_CD"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "NOTICE"."NOTICE_NO" IS '공지사항 번호';

COMMENT ON COLUMN "NOTICE"."NOTICE_TITLE" IS '공지사항 게시글  제목';

COMMENT ON COLUMN "NOTICE"."NOTICE_CONTENT" IS '공지사항 게시글 내용';

COMMENT ON COLUMN "NOTICE"."NOTICE_READ_COUNT" IS '공지사항 게시글  조회수';

COMMENT ON COLUMN "NOTICE"."NOTICE_CREATE_DT" IS '공지사항 게시글 작성일';

COMMENT ON COLUMN "NOTICE"."NOTICE_BOD_MODIFY_DT" IS '공지사항 게시글 마지막 수정일';

COMMENT ON COLUMN "NOTICE"."NOTICE_STATUS" IS '공지사항 게시글  상태 (삭제:N, 정상:Y)';

COMMENT ON COLUMN "NOTICE"."NOTICE_CATEGORY_CD" IS '공지사항 카테고리 코드 번호';

COMMENT ON COLUMN "NOTICE"."MEMBER_NO" IS '공지사항 게시글 작성 회원 구분 번호';

DROP TABLE "NORMAL_COMMENT";

CREATE TABLE "NORMAL_COMMENT" (
	"NORMAL_COMMENT_NO"	NUMBER		NOT NULL,
	"NORMAL_COMMENT_CONTENT"	CLOB		NOT NULL,
	"NORMAL_COMMENT_DT"	DATE		NOT NULL,
	"NORMAL_COMMENT_MODIFY_DT"	DATE		NULL,
	"NORMAL_COMMENT_CONDITION"	CHAR(1)	DEFAULT 'Y'	NULL,
	"NORMAL_BOARD_NO"	NUMBER		NOT NULL,
	"REPORT_NO"	NUMBER		NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "NORMAL_COMMENT"."NORMAL_COMMENT_NO" IS '일반 게시판 댓글 번호';

COMMENT ON COLUMN "NORMAL_COMMENT"."NORMAL_COMMENT_CONTENT" IS '일반 게시판 댓글 내용';

COMMENT ON COLUMN "NORMAL_COMMENT"."NORMAL_COMMENT_DT" IS '일반 게시판 댓글 작성일';

COMMENT ON COLUMN "NORMAL_COMMENT"."NORMAL_COMMENT_MODIFY_DT" IS '일반 게시판 마지막 댓글 수정일';

COMMENT ON COLUMN "NORMAL_COMMENT"."NORMAL_COMMENT_CONDITION" IS '일반 게시판 댓글 (삭제:N, 정상:Y)';

COMMENT ON COLUMN "NORMAL_COMMENT"."NORMAL_BOARD_NO" IS '일반 게시판 게시글 번호';

COMMENT ON COLUMN "NORMAL_COMMENT"."REPORT_NO" IS '일반 게시판 신고 번호';

COMMENT ON COLUMN "NORMAL_COMMENT"."MEMBER_NO" IS '일반 게시판 회원 구분 번호';

DROP TABLE "MOVIE";

CREATE TABLE "MOVIE" (
	"MOVIE_NO"	NUMBER		NOT NULL,
	"MOVIE_TITLE"	VARCHAR2(100)		NOT NULL,
	"MOVIE_CONTENT"	CLOB		NOT NULL,
	"MOVIE_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"MOVIE_CREATE_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NOT NULL,
	"MOVIE_MODIFY_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NOT NULL,
	"MOVIE_STATUS"	CHAR(1)	DEFAULT 'Y'	NOT NULL,
	"MOVIE_COUNTRY"	VARCHAR2(50)		NOT NULL,
	"MOVIE_RUNTIME"	NUMBER	DEFAULT 0	NOT NULL,
	"MOVIE_DIRECTOR"	VARCHAR2(50)		NOT NULL
);

COMMENT ON COLUMN "MOVIE"."MOVIE_NO" IS '영화 구분 번호';

COMMENT ON COLUMN "MOVIE"."MOVIE_TITLE" IS '영화 제목';

COMMENT ON COLUMN "MOVIE"."MOVIE_CONTENT" IS '영화 줄거리';

COMMENT ON COLUMN "MOVIE"."MOVIE_COUNT" IS '영화 상세페이지 조회수';

COMMENT ON COLUMN "MOVIE"."MOVIE_CREATE_DT" IS '영화 상세페이지 작성일';

COMMENT ON COLUMN "MOVIE"."MOVIE_MODIFY_DT" IS '영화 상세페이지 마지막 수정일';

COMMENT ON COLUMN "MOVIE"."MOVIE_STATUS" IS '영화 상세페이지 상태 (삭제: N, 정상:Y)';

COMMENT ON COLUMN "MOVIE"."MOVIE_COUNTRY" IS '영화 제작 OR 상영 국가';

COMMENT ON COLUMN "MOVIE"."MOVIE_RUNTIME" IS '영화 상영시간';

COMMENT ON COLUMN "MOVIE"."MOVIE_DIRECTOR" IS '영화 제작자 이름';

DROP TABLE "MOVIE_LINK";

CREATE TABLE "MOVIE_LINK" (
	"MOVIE_FILE_NO"	NUMBER		NOT NULL,
	"MOVIE_FILE_LINK"	VARCHAR2(500)		NOT NULL,
	"MOVIE_FILE_TYPE"	VARCHAR2(100)		NOT NULL,
	"MOVIE_FILE_LV"	NUMBER		NOT NULL,
	"MOVIE_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "MOVIE_FILE"."MOVIE_FILE_NO" IS '영화 파일 번호';
COMMENT ON COLUMN "MOVIE_FILE"."MOVIE_FILE_PATH" IS '영화 파일 링크 경로';
COMMENT ON COLUMN "MOVIE_FILE"."MOVIE_FILE_NM" IS '영화 파일 종류';
COMMENT ON COLUMN "MOVIE_FILE"."MOVIE_FILE_LV" IS '영화 파일 등록 순서';
COMMENT ON COLUMN "MOVIE_FILE"."MOVIE_NO" IS '영화 파일이 등록된 게시글 번호';

DROP TABLE "MOVIE_CATEGORY";

CREATE TABLE "MOVIE_CATEGORY" (
	"MOVIE_CATEGORY_CD"	NUMBER		NOT NULL,
	"MOVIE_CATEGORY_NM"	VARCHAR2(50)		NOT NULL
);

COMMENT ON COLUMN "MOVIE_CATEGORY"."MOVIE_CATEGORY_CD" IS '영화 장르 카테고리 코드';

COMMENT ON COLUMN "MOVIE_CATEGORY"."MOVIE_CATEGORY_NM" IS '영화 장르 이름';

DROP TABLE "RANK";

CREATE TABLE "RANK" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"MOVIE_NO"	NUMBER		NOT NULL,
	"RANK_POINT"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "RANK"."MEMBER_NO" IS '회원 구분 번호';

COMMENT ON COLUMN "RANK"."MOVIE_NO" IS '영화 구분 번호';

COMMENT ON COLUMN "RANK"."RANK_POINT" IS '영화 별점_(나중에 0.5단위로 저장)';

DROP TABLE "EVENT_BOARD";

CREATE TABLE "EVENT_BOARD" (
	"EVENT_BOD_NO"	NUMBER		NOT NULL,
	"EVENT_BOD_TITLE"	VARCHAR2(100)		NOT NULL,
	"EVENT_BOD_CONTENT"	CLOB		NOT NULL,
	"EVENT_BOD_READ_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"EVENT_BOD_CREATE_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NOT NULL,
	"EVENT_BOD_MODIFY_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NOT NULL,
	"START_DATE"	DATE		NOT NULL,
	"FINAL_DATE"	DATE		NOT NULL,
	"EVENT_BOD_STATUS"	CHAR(1)	DEFAULT 'Y'	NOT NULL,
	"EVENT_CATEGORY_CD"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER	DEFAULT 1	NOT NULL
);

COMMENT ON COLUMN "EVENT_BOARD"."EVENT_BOD_NO" IS '행사 게시글 번호';

COMMENT ON COLUMN "EVENT_BOARD"."EVENT_BOD_TITLE" IS '행사 게시글 제목';

COMMENT ON COLUMN "EVENT_BOARD"."EVENT_BOD_CONTENT" IS '행사 게시글 내용';

COMMENT ON COLUMN "EVENT_BOARD"."EVENT_BOD_READ_COUNT" IS '행사 게시글 조회수';

COMMENT ON COLUMN "EVENT_BOARD"."EVENT_BOD_CREATE_DT" IS '행사 게시글 작성일';

COMMENT ON COLUMN "EVENT_BOARD"."EVENT_BOD_MODIFY_DT" IS '행사 게시글 마지막 수정일';

COMMENT ON COLUMN "EVENT_BOARD"."START_DATE" IS '행사 시작일';

COMMENT ON COLUMN "EVENT_BOARD"."FINAL_DATE" IS '행사 종료일';

COMMENT ON COLUMN "EVENT_BOARD"."EVENT_BOD_STATUS" IS '행사 게시글 (삭제:N, 정상:Y)';

COMMENT ON COLUMN "EVENT_BOARD"."EVENT_CATEGORY_CD" IS '카테고리 코드 번호';

COMMENT ON COLUMN "EVENT_BOARD"."MEMBER_NO" IS '행사 게시글을 작성한 회원번호';

DROP TABLE "EVENT_FILE";

CREATE TABLE "EVENT_FILE" (
	"EVENT_FILE_NO"	NUMBER		NOT NULL,
	"EVENT_FILE_PATH"	VARCHAR2(500)		NOT NULL,
	"EVENT_FILE_NM"	VARCHAR2(100)		NOT NULL,
	"EVENT_FILE_LV"	NUMBER		NOT NULL,
	"EVENT_BOD_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "EVENT_FILE"."EVENT_FILE_NO" IS '행사 게시판 파일번호';

COMMENT ON COLUMN "EVENT_FILE"."EVENT_FILE_PATH" IS '행사 게시판 파일경로';

COMMENT ON COLUMN "EVENT_FILE"."EVENT_FILE_NM" IS '행사 게시판 파일명';

COMMENT ON COLUMN "EVENT_FILE"."EVENT_FILE_LV" IS '행사 게시글 파일등록 순서';

COMMENT ON COLUMN "EVENT_FILE"."EVENT_BOD_NO" IS '파일이 업로드 된 게시글 번호';

DROP TABLE "EVENT_COMMENT";

CREATE TABLE "EVENT_COMMENT" (
	"EVENT_COMMENT_NO"	NUMBER		NOT NULL,
	"EVENT_COMMENT_CONTENT"	CLOB		NOT NULL,
	"EVENT_COMMENT_CREATE_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NOT NULL,
	"EVENT_COMMENT_MODIFY_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NULL,
	"EVENT_COMMENT_STATUS"	CHAR(1)	DEFAULT 'Y'	NOT NULL,
	"EVENT_BOD_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "EVENT_COMMENT"."EVENT_COMMENT_NO" IS '댓글 번호';

COMMENT ON COLUMN "EVENT_COMMENT"."EVENT_COMMENT_CONTENT" IS '댓글내용';

COMMENT ON COLUMN "EVENT_COMMENT"."EVENT_COMMENT_CREATE_DT" IS '댓글작성일';

COMMENT ON COLUMN "EVENT_COMMENT"."EVENT_COMMENT_MODIFY_DT" IS '댓글 마지막 수정일';

COMMENT ON COLUMN "EVENT_COMMENT"."EVENT_COMMENT_STATUS" IS '댓글 상태  (삭제: N, 정상: Y)';

COMMENT ON COLUMN "EVENT_COMMENT"."EVENT_BOD_NO" IS '댓글이 달린 게시글 번호';

COMMENT ON COLUMN "EVENT_COMMENT"."MEMBER_NO" IS '댓글을 단 회원번호';

DROP TABLE "DROP";

CREATE TABLE "DROP" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"DROP_DT"	DATE	DEFAULT SYSDATE	NOT NULL,
	"DROP_REASON"	VARCHAR2(2000)		NOT NULL
);

COMMENT ON COLUMN "DROP"."MEMBER_NO" IS '회원 구분 번호';

COMMENT ON COLUMN "DROP"."DROP_DT" IS '회원 탈퇴일';

COMMENT ON COLUMN "DROP"."DROP_REASON" IS '회원 탈퇴 사유';

DROP TABLE "EVENT_CATEGORY";

CREATE TABLE "EVENT_CATEGORY" (
	"EVENT_CATEGORY_CD"	NUMBER		NOT NULL,
	"EVENT_CATEGORY_NM"	VARCHAR2(50)		NOT NULL
);

COMMENT ON COLUMN "EVENT_CATEGORY"."EVENT_CATEGORY_CD" IS '행사 카테고리 코드';

COMMENT ON COLUMN "EVENT_CATEGORY"."EVENT_CATEGORY_NM" IS '행사 카테고리명';

DROP TABLE "REPORT";

CREATE TABLE "REPORT" (
	"REPORT_NO"	NUMBER		NOT NULL,
	"REPORT_CONTENT"	VARCHAR2(500)		NULL,
	"REPORT_TITLE"	VARCHAR2(100)		NOT NULL,
	"REPORT_DATE"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"CS_CATEGORY_CD"	VARCHAR2(30)		NULL
);

COMMENT ON COLUMN "REPORT"."REPORT_NO" IS '신고번호';

COMMENT ON COLUMN "REPORT"."REPORT_CONTENT" IS '신고내용';

COMMENT ON COLUMN "REPORT"."REPORT_TITLE" IS '신고제목';

COMMENT ON COLUMN "REPORT"."REPORT_DATE" IS '신고 작성일';

COMMENT ON COLUMN "REPORT"."MEMBER_NO" IS '신고 회원번호';

COMMENT ON COLUMN "REPORT"."CS_CATEGORY_CD" IS '카테고리 코드';

DROP TABLE "CS_CATEGORY";

CREATE TABLE "CS_CATEGORY" (
	"CS_CATEGORY_CD"	NUMBER		NOT NULL,
	"CS_CATEGORY_NM"	VARCHAR2(30)		NOT NULL
);

COMMENT ON COLUMN "CS_CATEGORY"."CS_CATEGORY_CD" IS '카테고리 코드';

COMMENT ON COLUMN "CS_CATEGORY"."CS_CATEGORY_NM" IS '카테고리 이름';

DROP TABLE "NOTICE_CATEGORY";

CREATE TABLE "NOTICE_CATEGORY" (
	"NOTICE_CATEGORY_CD"	NUMBER		NOT NULL,
	"NOTICE_CATEGORY_NM"	VARCHAR2(50)		NOT NULL
);

COMMENT ON COLUMN "NOTICE_CATEGORY"."NOTICE_CATEGORY_CD" IS '공지사항 카테고리 코드';

COMMENT ON COLUMN "NOTICE_CATEGORY"."NOTICE_CATEGORY_NM" IS '공지사항 카테고리명';

DROP TABLE "COMPLAIN";

CREATE TABLE "COMPLAIN" (
	"COMPLAIN_NO"	NUMBER		NOT NULL,
	"COMPLAIN_TITLE"	VARCHAR2(100)		NOT NULL,
	"COMPLAIN_CONTENT"	CLOB		NOT NULL,
	"COMPLAIN_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"COMPLAIN_DATE"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NOT NULL,
	"COMPLAIN_MODIFY_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NULL,
	"COMPLAIN_STATUS"	CHAR(1)		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"CATEGORY_CD"	NUMBER		NOT NULL,
	"COMPLAIN_COMMENT_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "COMPLAIN"."COMPLAIN_NO" IS '불편사항 게시글 번호';

COMMENT ON COLUMN "COMPLAIN"."COMPLAIN_TITLE" IS '불편사항 게시글 제목';

COMMENT ON COLUMN "COMPLAIN"."COMPLAIN_CONTENT" IS '불편사항 게시글 내용';

COMMENT ON COLUMN "COMPLAIN"."COMPLAIN_COUNT" IS '불편사항 게시글 조회수';

COMMENT ON COLUMN "COMPLAIN"."COMPLAIN_DATE" IS '불편사항 게시글 작성일';

COMMENT ON COLUMN "COMPLAIN"."COMPLAIN_MODIFY_DT" IS '불편사항 게시글 마지막 수정일';

COMMENT ON COLUMN "COMPLAIN"."COMPLAIN_STATUS" IS '불편사항 게시글  상태  (삭제:N, 정상:Y)';

COMMENT ON COLUMN "COMPLAIN"."MEMBER_NO" IS '불편사항 게시글 회원번호';

COMMENT ON COLUMN "COMPLAIN"."CATEGORY_CD" IS '불편사항 게시글 카테고리 코드';

COMMENT ON COLUMN "COMPLAIN"."COMPLAIN_COMMENT_NO" IS '불편사항 댓글번호';

DROP TABLE "COMPLAIN_COMMENT";

CREATE TABLE "COMPLAIN_COMMENT" (
	"COMPLAIN_COMMENT_NO"	NUMBER		NOT NULL,
	"COMPLAIN_COMMENT_CONTENT"	CLOB		NOT NULL,
	"COMPLAIN_COMMENT_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NOT NULL,
	"COMPLAIN_COMMENT_MODIFY"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NULL,
	"COMPLAIN_COMMENT_STATUS"	CHAR(1)		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "COMPLAIN_COMMENT"."COMPLAIN_COMMENT_NO" IS '불편사항 댓글번호';

COMMENT ON COLUMN "COMPLAIN_COMMENT"."COMPLAIN_COMMENT_CONTENT" IS '불편사항 댓글 내용';

COMMENT ON COLUMN "COMPLAIN_COMMENT"."COMPLAIN_COMMENT_DT" IS '불편사항 댓글 작성일';

COMMENT ON COLUMN "COMPLAIN_COMMENT"."COMPLAIN_COMMENT_MODIFY" IS '불편사항 댓글 마지막 수정일';

COMMENT ON COLUMN "COMPLAIN_COMMENT"."COMPLAIN_COMMENT_STATUS" IS '불편사항 댓글  상태  (삭제:N, 정상:Y)';

COMMENT ON COLUMN "COMPLAIN_COMMENT"."MEMBER_NO" IS '불편사항 회원 구분 번호';

DROP TABLE "NOTICE_FILE";

CREATE TABLE "NOTICE_FILE" (
	"NOTICE_FILE_NO"	NUMBER		NOT NULL,
	"NOTICE_FILE_PATH"	VARCHAR2(500)		NOT NULL,
	"NOTICE_FILE_NM"	VARCHAR2(100)		NOT NULL,
	"NOTICE_FILE_LV"	NUMBER		NOT NULL,
	"NOTICE_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "NOTICE_FILE"."NOTICE_FILE_NO" IS '공지사항 파일번호';

COMMENT ON COLUMN "NOTICE_FILE"."NOTICE_FILE_PATH" IS '공지사항 파일 저장 경로';

COMMENT ON COLUMN "NOTICE_FILE"."NOTICE_FILE_NM" IS '공지사항 파일명';

COMMENT ON COLUMN "NOTICE_FILE"."NOTICE_FILE_LV" IS '공지사항 파일등록 순서';

COMMENT ON COLUMN "NOTICE_FILE"."NOTICE_NO" IS '파일이 업로드 된 공지사항 게시글 번호';

DROP TABLE "COMPLAIN_FILE";

CREATE TABLE "COMPLAIN_FILE" (
	"COMPLAIN_FILE"	NUMBER		NOT NULL,
	"COMPLAIN_FILE_PATH"	VARCHAR2(500)		NOT NULL,
	"COMPLAIN_FILE_NM"	VARCHAR2(100)		NOT NULL,
	"COMPLAIN_FILE_LV"	VARCHAR2(30)		NOT NULL,
	"COMPLAIN_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "COMPLAIN_FILE"."COMPLAIN_FILE" IS '불편사항 업로드파일 번호';

COMMENT ON COLUMN "COMPLAIN_FILE"."COMPLAIN_FILE_PATH" IS '불편사항 업로드파일 경로';

COMMENT ON COLUMN "COMPLAIN_FILE"."COMPLAIN_FILE_NM" IS '불편사항 업로드파일명';

COMMENT ON COLUMN "COMPLAIN_FILE"."COMPLAIN_FILE_LV" IS '불편사항 업로드파일레벨';

COMMENT ON COLUMN "COMPLAIN_FILE"."COMPLAIN_NO" IS '불편사항 게시글 번호';

DROP TABLE "ACTOR";

CREATE TABLE "ACTOR" (
	"ACTOR_CD"	NUMBER		NOT NULL,
	"MOVIE_NO"	NUMBER		NOT NULL,
	"ACTOR_NM"	VARCHAR2(30)		NOT NULL,
	"ACTOR_EN_NM"	VARCHAR2(30)		NOT NULL
);

COMMENT ON COLUMN "ACTOR"."ACTOR_CD" IS '영화 출연 배우 구분 코드';

COMMENT ON COLUMN "ACTOR"."MOVIE_NO" IS '영화 구분 번호';

COMMENT ON COLUMN "ACTOR"."ACTOR_NM" IS '영화 출연 배우 한글 이름';

COMMENT ON COLUMN "ACTOR"."ACTOR_EN_NM" IS '영화 출연 배우 영문 이름';

DROP TABLE "FAQ";

CREATE TABLE "FAQ" (
	"FAQ_NO"	NUMBER		NOT NULL,
	"FAQ_CONTENT"	CLOB		NOT NULL,
	"FAQ_TITLE"	VARCHAR2(100)		NOT NULL,
	"FAQ_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NOT NULL,
	"FAQ_MODIFY_DT"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NULL,
	"FAQ_STATUS"	CHAR(1)	DEFAULT 'Y'	NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "FAQ"."FAQ_NO" IS 'FAQ 게시글 번호';

COMMENT ON COLUMN "FAQ"."FAQ_CONTENT" IS 'FAQ 게시글 내용';

COMMENT ON COLUMN "FAQ"."FAQ_TITLE" IS 'FAQ 게시글 제목';

COMMENT ON COLUMN "FAQ"."FAQ_DT" IS 'FAQ 게시글 작성일';

COMMENT ON COLUMN "FAQ"."FAQ_MODIFY_DT" IS 'FAQ  게시글 마지막 수정일';

COMMENT ON COLUMN "FAQ"."FAQ_STATUS" IS 'FAQ 게시글  상태(삭제 : N, 존재:'Y')';

COMMENT ON COLUMN "FAQ"."MEMBER_NO" IS 'FAQ 회원 구분 번호';

DROP TABLE "FAQ_FILE";

CREATE TABLE "FAQ_FILE" (
	"COMPLAIN_FILE"	NUMBER		NOT NULL,
	"COMPLAIN_FILE_PATH"	VARCHAR2(500)		NOT NULL,
	"COMPLAIN_FILE_NM"	VARCHAR2(100)		NOT NULL,
	"COMPLAIN_FILE_LV"	VARCHAR2(30)		NOT NULL,
	"FAQ_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "FAQ_FILE"."COMPLAIN_FILE" IS 'FAQ 업로드파일 번호';

COMMENT ON COLUMN "FAQ_FILE"."COMPLAIN_FILE_PATH" IS 'FAQ 업로드파일 경로';

COMMENT ON COLUMN "FAQ_FILE"."COMPLAIN_FILE_NM" IS 'FAQ 업로드파일명';

COMMENT ON COLUMN "FAQ_FILE"."COMPLAIN_FILE_LV" IS 'FAQ 업로드파일레벨';

COMMENT ON COLUMN "FAQ_FILE"."FAQ_NO" IS 'FAQ 게시글 번호';

DROP TABLE "MYLIST";

CREATE TABLE "MYLIST" (
	"MOVIE_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"MYLIST_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "MYLIST"."MOVIE_NO" IS '영화 구분 번호';

COMMENT ON COLUMN "MYLIST"."MEMBER_NO" IS '회원 구분 번호';

COMMENT ON COLUMN "MYLIST"."MYLIST_NO" IS '찜 목록 순서';

DROP TABLE "NORMAL_FILE";

CREATE TABLE "NORMAL_FILE" (
	"NORMAL_FILE_NO"	NUMBER		NOT NULL,
	"NORMAL_FILE__PATH"	VARCHAR2(500)		NOT NULL,
	"NORMAL_FILE__NM"	VARCHAR2(100)		NOT NULL,
	"NORMAL_FILE_LV"	NUMBER		NOT NULL,
	"NORMAL_BOARD_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "NORMAL_FILE"."NORMAL_FILE_NO" IS '일반 게시판 파일번호';

COMMENT ON COLUMN "NORMAL_FILE"."NORMAL_FILE__PATH" IS '일반 게시판 파일경로';

COMMENT ON COLUMN "NORMAL_FILE"."NORMAL_FILE__NM" IS '일반 게시판 파일명';

COMMENT ON COLUMN "NORMAL_FILE"."NORMAL_FILE_LV" IS '일반 게시판  파일 등록 순서';

COMMENT ON COLUMN "NORMAL_FILE"."NORMAL_BOARD_NO" IS '일반 게시글 번호';

DROP TABLE "MOVIE_SORT";

CREATE TABLE "MOVIE_SORT" (
	"MOVIE_NO"	NUMBER		NOT NULL,
	"MOVIE_CATEGORY_CD"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "MOVIE_SORT"."MOVIE_NO" IS '영화 구분 번호';

COMMENT ON COLUMN "MOVIE_SORT"."MOVIE_CATEGORY_CD" IS '영화 장르 카테고리 코드';

ALTER TABLE "MEMBER" ADD CONSTRAINT "PK_MEMBER" PRIMARY KEY (
	"MEMBER_NO"
);

ALTER TABLE "PROFILE" ADD CONSTRAINT "PK_PROFILE" PRIMARY KEY (
	"MEMBER_NO"
);

ALTER TABLE "REVIEW_BOARD" ADD CONSTRAINT "PK_REVIEW_BOARD" PRIMARY KEY (
	"REVIEW_BOARD_NO"
);

ALTER TABLE "NORMAL_BOARD" ADD CONSTRAINT "PK_NORMAL_BOARD" PRIMARY KEY (
	"NORMAL_BOARD_NO"
);

ALTER TABLE "REVIEW_CATEGORY" ADD CONSTRAINT "PK_REVIEW_CATEGORY" PRIMARY KEY (
	"REVIEW_CATECORY_CD"
);

ALTER TABLE "NORMAL_CATEGORY" ADD CONSTRAINT "PK_NORMAL_CATEGORY" PRIMARY KEY (
	"NORMAL_CATEGORY_CD"
);

ALTER TABLE "REVIEW_FILE" ADD CONSTRAINT "PK_REVIEW_FILE" PRIMARY KEY (
	"REVIEW_FILE_NO"
);

ALTER TABLE "REVIEW_COMMENT" ADD CONSTRAINT "PK_REVIEW_COMMENT" PRIMARY KEY (
	"REVIEW_COMENT_NO"
);

ALTER TABLE "NOTICE" ADD CONSTRAINT "PK_NOTICE" PRIMARY KEY (
	"NOTICE_NO"
);

ALTER TABLE "NORMAL_COMMENT" ADD CONSTRAINT "PK_NORMAL_COMMENT" PRIMARY KEY (
	"NORMAL_COMMENT_NO"
);

ALTER TABLE "MOVIE" ADD CONSTRAINT "PK_MOVIE" PRIMARY KEY (
	"MOVIE_NO"
);

ALTER TABLE "MOVIE_FILE" ADD CONSTRAINT "PK_MOVIE_FILE" PRIMARY KEY (
	"MOVIE_FILE_NO"
);

ALTER TABLE "MOVIE_CATEGORY" ADD CONSTRAINT "PK_MOVIE_CATEGORY" PRIMARY KEY (
	"MOVIE_CATEGORY_CD"
);

ALTER TABLE "RANK" ADD CONSTRAINT "PK_RANK" PRIMARY KEY (
	"MEMBER_NO",
	"MOVIE_NO"
);

ALTER TABLE "EVENT_BOARD" ADD CONSTRAINT "PK_EVENT_BOARD" PRIMARY KEY (
	"EVENT_BOD_NO"
);

ALTER TABLE "EVENT_FILE" ADD CONSTRAINT "PK_EVENT_FILE" PRIMARY KEY (
	"EVENT_FILE_NO"
);

ALTER TABLE "EVENT_COMMENT" ADD CONSTRAINT "PK_EVENT_COMMENT" PRIMARY KEY (
	"EVENT_COMMENT_NO"
);

ALTER TABLE "DROP" ADD CONSTRAINT "PK_DROP" PRIMARY KEY (
	"MEMBER_NO"
);

ALTER TABLE "EVENT_CATEGORY" ADD CONSTRAINT "PK_EVENT_CATEGORY" PRIMARY KEY (
	"EVENT_CATEGORY_CD"
);

ALTER TABLE "REPORT" ADD CONSTRAINT "PK_REPORT" PRIMARY KEY (
	"REPORT_NO"
);

ALTER TABLE "CS_CATEGORY" ADD CONSTRAINT "PK_CS_CATEGORY" PRIMARY KEY (
	"CS_CATEGORY_CD"
);

ALTER TABLE "NOTICE_CATEGORY" ADD CONSTRAINT "PK_NOTICE_CATEGORY" PRIMARY KEY (
	"NOTICE_CATEGORY_CD"
);

ALTER TABLE "COMPLAIN" ADD CONSTRAINT "PK_COMPLAIN" PRIMARY KEY (
	"COMPLAIN_NO"
);

ALTER TABLE "COMPLAIN_COMMENT" ADD CONSTRAINT "PK_COMPLAIN_COMMENT" PRIMARY KEY (
	"COMPLAIN_COMMENT_NO"
);

ALTER TABLE "NOTICE_FILE" ADD CONSTRAINT "PK_NOTICE_FILE" PRIMARY KEY (
	"NOTICE_FILE_NO"
);

ALTER TABLE "COMPLAIN_FILE" ADD CONSTRAINT "PK_COMPLAIN_FILE" PRIMARY KEY (
	"COMPLAIN_FILE"
);

ALTER TABLE "ACTOR" ADD CONSTRAINT "PK_ACTOR" PRIMARY KEY (
	"ACTOR_CD"
);

ALTER TABLE "FAQ" ADD CONSTRAINT "PK_FAQ" PRIMARY KEY (
	"FAQ_NO"
);

ALTER TABLE "FAQ_FILE" ADD CONSTRAINT "PK_FAQ_FILE" PRIMARY KEY (
	"COMPLAIN_FILE"
);

ALTER TABLE "MYLIST" ADD CONSTRAINT "PK_MYLIST" PRIMARY KEY (
	"MOVIE_NO",
	"MEMBER_NO"
);

ALTER TABLE "NORMAL_FILE" ADD CONSTRAINT "PK_NORMAL_FILE" PRIMARY KEY (
	"NORMAL_FILE_NO"
);

ALTER TABLE "MOVIE_SORT" ADD CONSTRAINT "PK_MOVIE_SORT" PRIMARY KEY (
	"MOVIE_NO",
	"MOVIE_CATEGORY_CD"
);

ALTER TABLE "PROFILE" ADD CONSTRAINT "FK_MEMBER_TO_PROFILE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "REVIEW_BOARD" ADD CONSTRAINT "FK_MEMBER_TO_REVIEW_BOARD_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "REVIEW_BOARD" ADD CONSTRAINT "FK_MOVIE_TO_REVIEW_BOARD_1" FOREIGN KEY (
	"MOVIE_NO"
)
REFERENCES "MOVIE" (
	"MOVIE_NO"
);

ALTER TABLE "REVIEW_BOARD" ADD CONSTRAINT "FK_REPORT_TO_REVIEW_BOARD_1" FOREIGN KEY (
	"REPORT_NO"
)
REFERENCES "REPORT" (
	"REPORT_NO"
);

ALTER TABLE "REVIEW_BOARD" ADD CONSTRAINT "FK_REVIEW_CATEGORY_TO_REVIEW_BOARD_1" FOREIGN KEY (
	"REVIEW_CATECORY_CD"
)
REFERENCES "REVIEW_CATEGORY" (
	"REVIEW_CATECORY_CD"
);

ALTER TABLE "NORMAL_BOARD" ADD CONSTRAINT "FK_MEMBER_TO_NORMAL_BOARD_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "NORMAL_BOARD" ADD CONSTRAINT "FK_REPORT_TO_NORMAL_BOARD_1" FOREIGN KEY (
	"REPORT_NO"
)
REFERENCES "REPORT" (
	"REPORT_NO"
);

ALTER TABLE "NORMAL_BOARD" ADD CONSTRAINT "FK_NORMAL_CATEGORY_TO_NORMAL_BOARD_1" FOREIGN KEY (
	"NORMAL_CATEGORY_CD"
)
REFERENCES "NORMAL_CATEGORY" (
	"NORMAL_CATEGORY_CD"
);

ALTER TABLE "REVIEW_FILE" ADD CONSTRAINT "FK_REVIEW_BOARD_TO_REVIEW_FILE_1" FOREIGN KEY (
	"REVIEW_FILE_BOARD_NO"
)
REFERENCES "REVIEW_BOARD" (
	"REVIEW_BOARD_NO"
);

ALTER TABLE "REVIEW_COMMENT" ADD CONSTRAINT "FK_MEMBER_TO_REVIEW_COMMENT_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "REVIEW_COMMENT" ADD CONSTRAINT "FK_REPORT_TO_REVIEW_COMMENT_1" FOREIGN KEY (
	"REPORT_NO"
)
REFERENCES "REPORT" (
	"REPORT_NO"
);

ALTER TABLE "REVIEW_COMMENT" ADD CONSTRAINT "FK_REVIEW_BOARD_TO_REVIEW_COMMENT_1" FOREIGN KEY (
	"REVIEW_BOARD_NO"
)
REFERENCES "REVIEW_BOARD" (
	"REVIEW_BOARD_NO"
);

ALTER TABLE "NOTICE" ADD CONSTRAINT "FK_NOTICE_CATEGORY_TO_NOTICE_1" FOREIGN KEY (
	"NOTICE_CATEGORY_CD"
)
REFERENCES "NOTICE_CATEGORY" (
	"NOTICE_CATEGORY_CD"
);

ALTER TABLE "NOTICE" ADD CONSTRAINT "FK_MEMBER_TO_NOTICE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "NORMAL_COMMENT" ADD CONSTRAINT "FK_NORMAL_BOARD_TO_NORMAL_COMMENT_1" FOREIGN KEY (
	"NORMAL_BOARD_NO"
)
REFERENCES "NORMAL_BOARD" (
	"NORMAL_BOARD_NO"
);

ALTER TABLE "NORMAL_COMMENT" ADD CONSTRAINT "FK_REPORT_TO_NORMAL_COMMENT_1" FOREIGN KEY (
	"REPORT_NO"
)
REFERENCES "REPORT" (
	"REPORT_NO"
);

ALTER TABLE "NORMAL_COMMENT" ADD CONSTRAINT "FK_MEMBER_TO_NORMAL_COMMENT_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "MOVIE_FILE" ADD CONSTRAINT "FK_MOVIE_TO_MOVIE_FILE_1" FOREIGN KEY (
	"MOVIE_NO"
)
REFERENCES "MOVIE" (
	"MOVIE_NO"
);

ALTER TABLE "RANK" ADD CONSTRAINT "FK_MEMBER_TO_RANK_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "RANK" ADD CONSTRAINT "FK_MOVIE_TO_RANK_1" FOREIGN KEY (
	"MOVIE_NO"
)
REFERENCES "MOVIE" (
	"MOVIE_NO"
);

ALTER TABLE "EVENT_BOARD" ADD CONSTRAINT "FK_EVENT_CATEGORY_TO_EVENT_BOARD_1" FOREIGN KEY (
	"EVENT_CATEGORY_CD"
)
REFERENCES "EVENT_CATEGORY" (
	"EVENT_CATEGORY_CD"
);

ALTER TABLE "EVENT_BOARD" ADD CONSTRAINT "FK_MEMBER_TO_EVENT_BOARD_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "EVENT_FILE" ADD CONSTRAINT "FK_EVENT_BOARD_TO_EVENT_FILE_1" FOREIGN KEY (
	"EVENT_BOD_NO"
)
REFERENCES "EVENT_BOARD" (
	"EVENT_BOD_NO"
);

ALTER TABLE "EVENT_COMMENT" ADD CONSTRAINT "FK_EVENT_BOARD_TO_EVENT_COMMENT_1" FOREIGN KEY (
	"EVENT_BOD_NO"
)
REFERENCES "EVENT_BOARD" (
	"EVENT_BOD_NO"
);

ALTER TABLE "EVENT_COMMENT" ADD CONSTRAINT "FK_MEMBER_TO_EVENT_COMMENT_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "DROP" ADD CONSTRAINT "FK_MEMBER_TO_DROP_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "REPORT" ADD CONSTRAINT "FK_MEMBER_TO_REPORT_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "REPORT" ADD CONSTRAINT "FK_CS_CATEGORY_TO_REPORT_1" FOREIGN KEY (
	"CS_CATEGORY_CD"
)
REFERENCES "CS_CATEGORY" (
	"CS_CATEGORY_CD"
);

ALTER TABLE "COMPLAIN" ADD CONSTRAINT "FK_MEMBER_TO_COMPLAIN_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "COMPLAIN" ADD CONSTRAINT "FK_CS_CATEGORY_TO_COMPLAIN_1" FOREIGN KEY (
	"CATEGORY_CD"
)
REFERENCES "CS_CATEGORY" (
	"CS_CATEGORY_CD"
);

ALTER TABLE "COMPLAIN" ADD CONSTRAINT "FK_COMPLAIN_COMMENT_TO_COMPLAIN_1" FOREIGN KEY (
	"COMPLAIN_COMMENT_NO"
)
REFERENCES "COMPLAIN_COMMENT" (
	"COMPLAIN_COMMENT_NO"
);

ALTER TABLE "COMPLAIN_COMMENT" ADD CONSTRAINT "FK_MEMBER_TO_COMPLAIN_COMMENT_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "NOTICE_FILE" ADD CONSTRAINT "FK_NOTICE_TO_NOTICE_FILE_1" FOREIGN KEY (
	"NOTICE_NO"
)
REFERENCES "NOTICE" (
	"NOTICE_NO"
);

ALTER TABLE "COMPLAIN_FILE" ADD CONSTRAINT "FK_COMPLAIN_TO_COMPLAIN_FILE_1" FOREIGN KEY (
	"COMPLAIN_NO"
)
REFERENCES "COMPLAIN" (
	"COMPLAIN_NO"
);

ALTER TABLE "ACTOR" ADD CONSTRAINT "FK_MOVIE_TO_ACTOR_1" FOREIGN KEY (
	"MOVIE_NO"
)
REFERENCES "MOVIE" (
	"MOVIE_NO"
);

ALTER TABLE "FAQ" ADD CONSTRAINT "FK_MEMBER_TO_FAQ_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "FAQ_FILE" ADD CONSTRAINT "FK_FAQ_TO_FAQ_FILE_1" FOREIGN KEY (
	"FAQ_NO"
)
REFERENCES "FAQ" (
	"FAQ_NO"
);

ALTER TABLE "MYLIST" ADD CONSTRAINT "FK_MOVIE_TO_MYLIST_1" FOREIGN KEY (
	"MOVIE_NO"
)
REFERENCES "MOVIE" (
	"MOVIE_NO"
);

ALTER TABLE "MYLIST" ADD CONSTRAINT "FK_MEMBER_TO_MYLIST_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "NORMAL_FILE" ADD CONSTRAINT "FK_NORMAL_BOARD_TO_NORMAL_FILE_1" FOREIGN KEY (
	"NORMAL_BOARD_NO"
)
REFERENCES "NORMAL_BOARD" (
	"NORMAL_BOARD_NO"
);

ALTER TABLE "MOVIE_SORT" ADD CONSTRAINT "FK_MOVIE_TO_MOVIE_SORT_1" FOREIGN KEY (
	"MOVIE_NO"
)
REFERENCES "MOVIE" (
	"MOVIE_NO"
);

ALTER TABLE "MOVIE_SORT" ADD CONSTRAINT "FK_MOVIE_CATEGORY_TO_MOVIE_SORT_1" FOREIGN KEY (
	"MOVIE_CATEGORY_CD"
)
REFERENCES "MOVIE_CATEGORY" (
	"MOVIE_CATEGORY_CD"
);